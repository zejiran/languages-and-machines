// -----------------------
// Silvia Takahashi
// UNIVERSIDAD DE LOS ANDES
//------------------------------
//  An automaton that recognizes strings :  W$B   (#W =  #B').  Where:
//    each letter in the alphabet occurs at most one time  in W
//     all letters that appear in W also appear in B 
//    Run this gold program with arguments:

//  Argument should be a string that contains  letters in A,  fo example  abcdefgh
 //   Will not work for alfabets larger than 13


// NOTE that the pumping lemma is not applicable to this language, because this language
//  is finite
//
//-----------------------


using gold.**

var  A
procedure main(args:String[]) begin
	
	if  args.length=0  then  A:=('a' ‥ 'c')
	else	
		A := {args[0].charAt(i) |  0 ≤ i < args[0].length()}
    end
   // GAutomataFrame.show(create())
   testPerm(create())
 end

        

 
function create():IAutomaton begin
	Q:= (℘(A)×(1‥2)) ∪ {0}   
	Σ:=A ∪ {'$'}
	q₀ := ⟨Ø,1⟩
	F:= {⟨Ø,2⟩}
	return 	GDeterministicAutomaton(Q,Σ,q₀,F,delta)
end

function delta(q,s) begin  
	return q
end
function delta(⟨q,p⟩,s) begin  

    if p=1 and s='$' then return ⟨q ,2⟩ 
    elseif s='$' then return 0
    elseif p=1 and  s in q then  return 0
    elseif p=1 then return ⟨q ∪ {s} ,1⟩
	elseif s in q then  return ⟨q \ {s} ,2⟩
	else return 0
	end

end

procedure testPerm(C:IAutomaton) begin
 	var sc:java.util.Scanner(System.$in)
 	var  string: String
   	
     
   	print  "Testing"
	while true do
		print "----------------------------"
		print "Enter a string:"
		string:=sc.nextLine()
		if string = "" then  break end
		result:=C.acceptsString(string)
		print "The string was "+(result?"accepted":"REJECTED") 
	end
	print "End test"
 
end



