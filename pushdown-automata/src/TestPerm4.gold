// -----------------------
// Silvia Takahashi
// UNIVERSIDAD DE LOS ANDES
//------------------------------
// 
//  
// An automaton that recognizes strings of  the form WV.
//  #W = #V
//    and all symbols in ∑ appear in WV
//   Where:
//     W ∈ ∑*,   	   V ∈ ∑*,   	   	
//      No symbol in W appears in V
//-----------------------
//   By default  A = ('a' ‥ 'g'), it can be changed invoking the program with a string  of symbols. 
//   A  will contain all the the symbols in the string
//  

using gold.**

var  A  
procedure main(args:String[]) begin
 	   
	if  args.length=0  then  A:=('a' ‥ 'g')
	else	
		A := {args[0].charAt(i) |  0 ≤ i < args[0].length()}\{'$'}
    end
    //GAutomataFrame.show(create())
   testPerm(create())
 end

         
   
    
function create():IAutomaton begin
	Q:= ℘(A) ∪ (℘(A)×℘(A))  
	Σ:=A
	Γ:={'1'}
	q₀ := Ø
	F := {⟨S,T⟩ |  S in ℘(A), T= Ø }
	print F
	
	M:=GPushdownAutomaton(Q,Σ,Γ,q₀,F)
 
	
	for each S in ℘(A) do
		M.delta(S,⟨S,Σ\S⟩,"").ignore()	
		for each  t in A do
			M.delta(S,S∪{t},t).push("1")
			for each T in ℘(A) do
				if  not (t in S) then
					M.delta(⟨S,T⟩,⟨S,T\{t}⟩,t).pop("1")
				end
			end
     
     end
     
 end

   return 	M
end



//  procedure to test the automata without the graphical interface 
procedure testPerm(C:IAutomaton) begin
 	var sc:java.util.Scanner(System.$in)
 	var  string: String
   	
     
   	print  "Testing"

	while true do
		print "----------------------------"
		print "Enter a string:"
		string:=sc.nextLine()
		if string = "STOP" then  break end
		result:=C.acceptsString(string)
		print "The string was "+(result?"accepted":"REJECTED") 
	end
	print "End test"
 
end



