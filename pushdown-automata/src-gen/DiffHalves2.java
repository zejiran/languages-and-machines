// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/DiffHalves2.gold"
import gold.structures.automaton.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class DiffHalves2 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object A=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=28;
      if ($opEqualY($invokeField("length",args),0)) {
        $line=28;
        A=$fix($opIntvlY('a','b'));
      }
      else {
        $line=30;
        gold.structures.set.ISet $v1=$newSet();
        int $v3=$int(0);
        int $v4=$int($invokeMethod("length",((java.lang.String[])args)[$int(0)],new Object[]{}))-1;
        $v2:for (int i=$v3; i<=$v4; i++) {
          $v1.add($invokeMethod("charAt",((java.lang.String[])args)[$int(0)],new Object[]{i}));
        }
        A=$fix($opDiffeY($v1,GCollections.asSet('$')));
      }
      $line=32;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,DiffHalves2.create()));
      $line=33;
      DiffHalves2.test($cast(gold.structures.automaton.IAutomaton.class,DiffHalves2.create()));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,DiffHalves2.class,"main",$line);
    }
  }
  public static IPushdownAutomaton create() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=40;
      Object \u03A3=$fix(A);
      $line=42;
      Object Q=$fix($opUnionY(GCollections.asSet('I','F'),\u03A3));
      $line=44;
      Object \u0393=$fix(GCollections.asSet('0','1'));
      $line=45;
      Object q_0=$fix('I');
      $line=46;
      Object F=$fix(GCollections.asSet('F'));
      $line=47;
      Object M=$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F}));
      $line=49;
      for (Object $v5:GCollections.unmodifiableCollection(\u03A3)) {
        Object \u03C3=$v5;
        $line=51;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta('I','I',$cast(java.lang.String.class,\u03C3)),new Object[]{"0"});
        $line=52;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta('I',\u03C3,$cast(java.lang.String.class,\u03C3)),new Object[]{});
        $line=53;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta('F','F',$cast(java.lang.String.class,\u03C3)),new Object[]{"1"});
        $line=55;
        for (Object $v6:GCollections.unmodifiableCollection(\u03A3)) {
          Object x=$v6;
          $line=56;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(x,x,$cast(java.lang.String.class,\u03C3)),new Object[]{"0"});
          $line=57;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(x,x,$cast(java.lang.String.class,\u03C3)),new Object[]{"1"});
          $line=58;
          if ($bool(!$opEqualY(x,\u03C3))) {
            $line=59;
            $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(x,'F',$cast(java.lang.String.class,\u03C3)),new Object[]{});
          }
        }
      }
      $line=64;
      $result=M;
      if (true) break $try;
      $line=65;
      $rethrow(new RuntimeException("The function \"create()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,DiffHalves2.class,"create",$line);
    }
    return $cast(IPushdownAutomaton.class,$result);
  }
  public static Object test(IAutomaton C) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=69;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=70;
      String string=null;
      string=$defaultValue(String.class);
      $line=73;
      System.out.println($message(new Object[]{"Testing"}));
      $line=75;
      while (true) {
        if (!($bool(true))) break;
        $line=76;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=77;
        System.out.println($message(new Object[]{"Enter a string: (STOP  to exit)"}));
        $line=78;
        string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
        $line=79;
        if ($opEqualY(string,"STOP")) {
          $line=79;
          break;
        }
        $line=80;
        Object result=$fix(((gold.structures.automaton.IAutomaton)C).acceptsString($cast(java.lang.String.class,string)));
        $line=81;
        System.out.println($message(new Object[]{$opAdditY("The string was ",(($bool(result))?("accepted"):("REJECTED")))}));
      }
      $line=83;
      System.out.println($message(new Object[]{"End test"}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,DiffHalves2.class,"test",$line);
    }
    return $result;
  }
}
