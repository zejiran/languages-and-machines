// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/TestParmPDA.gold"
import gold.structures.automaton.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class TestParmPDA {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object A=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=29;
      if ($opEqualY($invokeField("length",args),0)) {
        $line=29;
        A=$fix($opIntvlY('a','c'));
      }
      else {
        $line=31;
        gold.structures.set.ISet $v1=$newSet();
        int $v3=$int(0);
        int $v4=$int($invokeMethod("length",((java.lang.String[])args)[$int(0)],new Object[]{}))-1;
        $v2:for (int i=$v3; i<=$v4; i++) {
          $v1.add($invokeMethod("charAt",((java.lang.String[])args)[$int(0)],new Object[]{i}));
        }
        A=$fix($v1);
      }
      $line=34;
      TestParmPDA.test($cast(gold.structures.automaton.IAutomaton.class,TestParmPDA.createAutomaton()));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,TestParmPDA.class,"main",$line);
    }
  }
  public static IPushdownAutomaton createAutomaton() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=40;
      Object Parts=$fix($opPwsetY(A));
      $line=41;
      Object Q=$fix($opCartsY(new Object[]{Parts,$opIntvlY(1,2)}));
      $line=42;
      Object \u03A3=$fix($opUnionY(A,GCollections.asSet('$')));
      $line=43;
      System.out.println($message(new Object[]{\u03A3}));
      $line=44;
      Object q_0=$fix(GCollections.asList(GCollections.emptySet(),1));
      $line=45;
      Object F=$fix($opCartsY(new Object[]{$opPwsetY(A),GCollections.asSet(2)}));
      $line=46;
      Object \u0393=$fix(GCollections.asSet('1'));
      $line=47;
      Object M=$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F}));
      $line=50;
      for (Object $v5:GCollections.unmodifiableCollection(Parts)) {
        Object q=$v5;
        $line=51;
        for (Object $v6:GCollections.unmodifiableCollection(A)) {
          Object s=$v6;
          $line=52;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(q,1),GCollections.asList($opUnionY(q,GCollections.asSet(s)),1),$cast(java.lang.String.class,$opAdditY("",s))),new Object[]{"1"});
        }
        $line=54;
        for (Object $v7:GCollections.unmodifiableCollection(q)) {
          Object s=$v7;
          $line=55;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(q,2),GCollections.asList(q,2),$cast(java.lang.String.class,$opAdditY("",s))),new Object[]{"1"});
        }
        $line=57;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(q,1),GCollections.asList(q,2),$cast(java.lang.String.class,"$")),new Object[]{});
      }
      $line=60;
      $result=M;
      if (true) break $try;
      $line=61;
      $rethrow(new RuntimeException("The function \"createAutomaton()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,TestParmPDA.class,"createAutomaton",$line);
    }
    return $cast(IPushdownAutomaton.class,$result);
  }
  public static Object test(IAutomaton C) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=65;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=66;
      Boolean stop=null;
      stop=$defaultValue(Boolean.class);
      $line=67;
      String string=null;
      string=$defaultValue(String.class);
      $line=71;
      stop=$cast(Boolean.class,$fix(false));
      $line=76;
      System.out.println($message(new Object[]{"Testing"}));
      $line=77;
      while (true) {
        if (!($bool(true))) break;
        $line=78;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=79;
        System.out.println($message(new Object[]{"Enter a string:"}));
        $line=80;
        string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
        $line=81;
        Object result=$fix(((gold.structures.automaton.IAutomaton)C).acceptsString($cast(java.lang.String.class,string)));
        $line=82;
        System.out.println($message(new Object[]{$opAdditY("The string was ",(($bool(result))?("accepted"):("REJECTED")))}));
      }
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,TestParmPDA.class,"test",$line);
    }
    return $result;
  }
}
