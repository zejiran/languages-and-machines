// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/NewFile.gold"
import gold.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class NewFile {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object rem(String s, Apint i) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result=$opAdditY(((java.lang.String)s).substring($int(0),$int(i)),((java.lang.String)s).substring($int($opAdditY(i,1)),$int($opAbsolY(s))));
      if (true) break $try;
      $line=2;
      $rethrow(new RuntimeException("The function \"rem(s:String,i:Apint)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"rem",$line);
    }
    return $result;
  }
  public static Object perms(Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=6;
      if ($opEqualY($opAbsolY(s),0)) {
        $line=6;
        $result=GCollections.asSet(s);
        if (true) break $try;
      }
      else {
        $line=8;
        gold.structures.set.ISet $v1=$newSet();
        int $v3=$int(0);
        int $v4=$int($opAbsolY(s))-1;
        $v2:for (int i=$v3; i<=$v4; i++) {
          for (Object a:GCollections.singletonCollection($getArrayValue(s,new Object[]{i}))) {
            for (Object b:GCollections.unmodifiableCollection(NewFile.perms(NewFile.rem($cast(java.lang.String.class,s),$cast(org.apfloat.Apint.class,i))))) {
              $v1.add($opAdditY(a,b));
            }
          }
        }
        $result=$v1;
        if (true) break $try;
      }
      $line=10;
      $rethrow(new RuntimeException("The function \"perms(s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"perms",$line);
    }
    return $result;
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=15;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=16;
      while (true) {
        if (!($bool(true))) break;
        $line=17;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=18;
        System.out.println($message(new Object[]{"Input String (empty string to exit): "}));
        $line=20;
        Object string=$fix(((java.util.Scanner)sc).nextLine());
        $line=21;
        if ($opEqualY(string,"")) {
          $line=21;
          break;
        }
        $line=22;
        System.out.println($message(new Object[]{NewFile.perms(string)}));
      }
      $line=25;
      System.out.println($message(new Object[]{"Execution terminated"}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,NewFile.class,"main",$line);
    }
  }
}
