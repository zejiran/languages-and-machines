


using gold.structures.automaton.*
using gold.visualization.automaton.*
procedure main(args:String[]) begin
	
	M:=GDeterministicAutomaton( ({'a','b'}×(0‥2)) ∪ {0} , {'a','b','x'},⟨'a',0⟩,{⟨'b',0⟩},d)
	GAutomataFrame.show(M)
end

function d(x,z) begin
 return x
end

function d(⟨x,c⟩,s) begin
  if  x='a' then
  	 if s='a' then return ⟨x,(c+1)%3⟩
  	 elseif s='b' then return  ⟨x,c⟩
  	 else  return ⟨'b',(3-c)%3⟩   // s='x '
  	 end
  else	// x=b
 	 if s='b' then return ⟨x,(c+1)%3⟩
  	 elseif s='a' then return  ⟨x,c⟩
  	 else  return 0   // s='x '
  	 end
  end
end
