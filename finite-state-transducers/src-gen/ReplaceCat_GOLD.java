// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/ReplaceCat_GOLD.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class ReplaceCat_GOLD {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=3;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,ReplaceCat_GOLD.createAutomaton()));
      $line=4;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,ReplaceCat_GOLD.createAutomaton()));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceCat_GOLD.class,"main",$line);
    }
  }
  public static Object getName() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=8;
      $result="replace cat";
      if (true) break $try;
      $line=9;
      $rethrow(new RuntimeException("The function \"getName()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceCat_GOLD.class,"getName",$line);
    }
    return $result;
  }
  public static GHashTableMap delta=null;
  static {
    int $line=0;
    $line=11;
    $try:try {
      delta=$invokeConstructor(GHashTableMap.class,new Object[]{});
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceCat_GOLD.class,null,$line);
    }
  }
  public static GHashTableMap outputT=null;
  static {
    int $line=0;
    $line=12;
    $try:try {
      outputT=$invokeConstructor(GHashTableMap.class,new Object[]{});
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceCat_GOLD.class,null,$line);
    }
  }
  public static IAutomaton createAutomaton() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=15;
      Object Q=$fix(GCollections.asSet("_cat","c_at","ca_t","fin",0));
      $line=16;
      Object \u03A3=$fix(GCollections.asSet('c','a','t','$'));
      $line=17;
      Object O=$fix(GCollections.asSet('c','a','t','K','$'));
      $line=19;
      Object q_0=$fix("_cat");
      $line=20;
      Object F=$fix(GCollections.asSet("fin"));
      $line=23;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("_cat",'c'),"");
      $line=24;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("_cat",'$'),"$");
      $line=25;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("_cat",'a'),"a");
      $line=26;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("_cat",'t'),"t");
      $line=28;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("c_at",'c'),"c");
      $line=29;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("c_at",'a'),"");
      $line=30;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("c_at",'$'),"c$");
      $line=31;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("c_at",'t'),"ct");
      $line=33;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("ca_t",'c'),"ca");
      $line=34;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("ca_t",'$'),"ca$");
      $line=35;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("ca_t",'a'),"caa");
      $line=36;
      ((gold.structures.map.GHashTableMap)outputT).put(GCollections.asList("ca_t",'t'),"K");
      $line=38;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("_cat",'c'),"c_at");
      $line=39;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("_cat",'a'),"_cat");
      $line=40;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("_cat",'t'),"_cat");
      $line=41;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("_cat",'$'),"fin");
      $line=43;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("c_at",'$'),"fin");
      $line=44;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("c_at",'c'),"c_at");
      $line=45;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("c_at",'a'),"ca_t");
      $line=46;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("c_at",'t'),"_cat");
      $line=48;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("ca_t",'c'),"c_at");
      $line=49;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("ca_t",'a'),"_cat");
      $line=50;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("ca_t",'t'),"_cat");
      $line=51;
      ((gold.structures.map.GHashTableMap)delta).put(GCollections.asList("ca_t",'$'),"fin");
      $line=54;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,O,"_cat",F,new GMethod(ReplaceCat_GOLD.class,"\u03B4"),new GMethod(ReplaceCat_GOLD.class,"g"),new GMethod(ReplaceCat_GOLD.class,"h")});
      if (true) break $try;
      $line=55;
      $rethrow(new RuntimeException("The function \"createAutomaton()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceCat_GOLD.class,"createAutomaton",$line);
    }
    return $cast(IAutomaton.class,$result);
  }
  public static Object g(Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result="";
      if (true) break $try;
      $line=57;
      $rethrow(new RuntimeException("The function \"g(x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceCat_GOLD.class,"g",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result=(($bool(((gold.structures.map.GHashTableMap)delta).containsKey(GCollections.asList(q,s))))?(((gold.structures.map.GHashTableMap)delta).get(GCollections.asList(q,s))):(0));
      if (true) break $try;
      $line=59;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceCat_GOLD.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result=(($bool(((gold.structures.map.GHashTableMap)outputT).containsKey(GCollections.asList(q,s))))?(((gold.structures.map.GHashTableMap)outputT).get(GCollections.asList(q,s))):(""));
      if (true) break $try;
      $line=60;
      $rethrow(new RuntimeException("The function \"h(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceCat_GOLD.class,"h",$line);
    }
    return $result;
  }
}
