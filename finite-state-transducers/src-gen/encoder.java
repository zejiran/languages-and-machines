// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/encoder.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class encoder {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=12;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,encoder.createAutomaton()));
      $line=13;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,encoder.createAutomaton()));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,encoder.class,"main",$line);
    }
  }
  public static Object getName() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=17;
      $result="encoder";
      if (true) break $try;
      $line=18;
      $rethrow(new RuntimeException("The function \"getName()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,encoder.class,"getName",$line);
    }
    return $result;
  }
  public static IAutomaton createAutomaton() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=21;
      Object \u03A3=$fix($opIntvlY('0','9'));
      $line=22;
      Object O=$fix(GCollections.asSet('0','1','2','3','4','5','6','7','8','9','#'));
      $line=24;
      Object Q=$fix($opUnionY($opCartsY(new Object[]{$opIntvlY(1,9),$opIntvlY(0,9)}),GCollections.asSet(0)));
      $line=25;
      Object q_0=$fix(0);
      $line=26;
      Object F=$fix($opUnionY($opCartsY(new Object[]{$opIntvlY(1,9),$opIntvlY(0,9)}),GCollections.asSet(0)));
      $line=28;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,O,q_0,F,new GMethod(encoder.class,"\u03B4"),new GMethod(encoder.class,"g"),new GMethod(encoder.class,"h")});
      if (true) break $try;
      $line=29;
      $rethrow(new RuntimeException("The function \"createAutomaton()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,encoder.class,"createAutomaton",$line);
    }
    return $cast(IAutomaton.class,$result);
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=32;
      $result="";
      if (true) break $try;
      $line=33;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,encoder.class,"g",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object d, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=36;
      s=$fix(Integer.parseInt($cast(java.lang.String.class,s)));
      $line=37;
      if ($opEqualY(s,0)) {
        $line=37;
        $result=0;
        if (true) break $try;
      }
      $line=38;
      if ($opEqualY(d,0)) {
        $line=38;
        $result=GCollections.asList(s,1);
        if (true) break $try;
      }
      $line=39;
      $rethrow(new RuntimeException("The function \"\u03B4(d:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,encoder.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object \u03B4(java.lang.Iterable $v1, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v2=GCollections.unmodifiableCollection($v1).iterator();
      Object d=$v2.next();
      Object i=$v2.next();
      $line=42;
      s=$fix(Integer.parseInt($cast(java.lang.String.class,s)));
      $line=43;
      if ($opEqualY(d,0)) {
        $line=43;
        $result=GCollections.asList(s,$opAdditY(i,1));
        if (true) break $try;
      }
      else {
        $line=44;
        $result=GCollections.asList(d,$opModulY($opAdditY(i,1),d));
        if (true) break $try;
      }
      $line=46;
      $rethrow(new RuntimeException("The function \"\u03B4(\u27E8d,i\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,encoder.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object d, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=49;
      if ($opEqualY(d,0)) {
        $line=49;
        $result=s;
        if (true) break $try;
      }
      $line=51;
      $rethrow(new RuntimeException("The function \"h(d:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,encoder.class,"h",$line);
    }
    return $result;
  }
  public static Object h(java.lang.Iterable $v3, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v4=GCollections.unmodifiableCollection($v3).iterator();
      Object d=$v4.next();
      Object i=$v4.next();
      $line=54;
      s=$fix(Integer.parseInt($cast(java.lang.String.class,s)));
      $line=55;
      if (($opEqualY($opModulY(i,d),0)&&$opEqualY(s,d))) {
        $line=55;
        $result='#';
        if (true) break $try;
      }
      else {
        $line=56;
        if ($opEqualY($opModulY(i,d),1)) {
          $line=56;
          $result=Integer.toString($int($opModulY($opAdditY(s,d),10)));
          if (true) break $try;
        }
        else {
          $line=57;
          $result=Integer.toString($int(s));
          if (true) break $try;
        }
      }
      $line=59;
      $rethrow(new RuntimeException("The function \"h(\u27E8d,i\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,encoder.class,"h",$line);
    }
    return $result;
  }
}
